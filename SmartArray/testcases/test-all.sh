#!/bin/bash


# Sean Szumlanski
# COP 3502, Spring 2017

# =======================
# SmartArray: test-all.sh
# =======================
# You can run this script at the command line like so:
#
#   bash test-all.sh
#
# For more details, see the assignment PDF.


NUM_TEST_CASES=5

for i in `seq -f "%02g" 1 $NUM_TEST_CASES`;
do
	echo -n "Checking testcase$i... "

	# Attempt to compile.
	gcc SmartArray.c testcase$i.c -lm 2> /dev/null
	compile_val=$?
	if [[ $compile_val != 0 ]]; then
		echo "fail (failed to compile)"
		continue
	fi

	# Run program. Capture return value to check whether it crashes.
	./a.out > myoutput$i.txt 2> /dev/null
	execution_val=$?
	if [[ $execution_val != 0 ]]; then
		echo "fail (program crashed)"
		continue
	fi

	# Run diff and capture its return value.
	diff myoutput$i.txt output$i.txt > /dev/null
	diff_val=$?
	
	# Output results based on diff's return value.
	if  [[ $diff_val != 0 ]]; then
		echo "fail (output does not match)"
	else
		echo "PASS!"
	fi
done

# Clean up the executable file.
rm -f a.out

# Clean up the output files generated by this script.
for i in `seq -f "%02g" 1 $NUM_TEST_CASES`;
do
	rm -f myoutput$i.txt
done

echo ""
echo "WHOA THERE! Before you submit your program, please be aware that these test"
echo "cases are not comprehensive. The test cases I wrote for you are just a sort"
echo "of starter pack, designed to show you how you can write test cases for your"
echo "programs, which you can do even before you've completed the functions you're"
echo "working on. You should create additional test cases in order to fully test"
echo "the functionality and correctness of your program."
